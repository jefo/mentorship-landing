---
import { Icon } from 'astro-icon/components';

const advantages = [
  {
    title: 'Дешевле курсов, лучше самообучения',
    description: 'Персональная программа обучения позволяет сфокусироваться только на том, что нужно именно вам. Никаких лишних тем и потерянного времени. Результат достигается в 2-3 раза быстрее, чем на курсах.',
    icon: 'ri:money-dollar-circle-line',
    image: '/images/cost-effective.svg',
    metrics: ['1-3 месяца вместо 6-12', 'Экономия до 70% бюджета', 'Только нужные навыки']
  },
  {
    title: 'Ментор всегда на связи',
    description: 'Застряли с задачей? Ваш персональный ментор доступен 24/7 через чат. Никаких ожиданий ответа "до следующего урока" - получайте помощь тогда, когда она нужна.',
    icon: 'ri:customer-service-2-line',
    image: '/images/mentor-support.svg',
    metrics: ['Ответ в течение часа', 'Код ревью в тот же день', 'Помощь с выбором технологий']
  },
  {
    title: 'Точечная прокачка навыков',
    description: 'Как профессиональный тренер в спортзале, мы определяем слабые места и составляем программу точечной тренировки. Никаких типовых курсов - только те упражнения, которые нужны именно вам для роста.',
    icon: 'ri:focus-2-line',
    image: '/images/focused-training.svg',
    metrics: [
      'Диагностика слабых мест',
      'Индивидуальный план развития',
      'Измеримый прогресс'
    ]
  },
  {
    title: 'Гарантированный рост дохода',
    description: 'Наша программа нацелена на конкретный результат - увеличение вашей зарплаты. Мы готовим вас к собеседованиям, прокачиваем технический язык и помогаем уверенно презентовать свои навыки.',
    icon: 'ri:line-chart-line',
    image: '/images/salary-growth.svg',
    metrics: ['Рост зарплаты на 100-150%']
  },
  {
    title: 'Больше откликов на резюме',
    description: 'Мы помогаем создать профессиональное резюме, которое привлекает внимание рекрутеров. Наши студенты получают больше приглашений на собеседования благодаря правильному представлению своих навыков и опыта.',
    icon: 'ri:file-list-3-line',
    image: '/images/resume-success.svg',
    metrics: ['Оптимизированное резюме', 'Профессиональное портфолио', 'Привлекательный профиль']
  },
  {
    title: 'Успешные собеседования',
    description: 'Подготовим вас к техническим интервью и системному дизайну. Отработаем ответы на популярные вопросы и научим уверенно проходить любые этапы собеседований.',
    icon: 'ri:team-line',
    image: '/images/interview-success.svg',
    metrics: ['Практика интервью', 'Разбор типовых задач', 'Работа над soft skills']
  }
];
---

<style>
  .carousel-container {
    @apply relative overflow-hidden;
    perspective: 1000px;
  }

  .carousel-track {
    @apply flex transition-transform duration-500 ease-out;
    transform-style: preserve-3d;
  }

  .advantage-card {
    @apply relative w-full flex-shrink-0 overflow-hidden rounded-2xl bg-white transition-all duration-500;
    border: 1px solid rgba(79, 70, 229, 0.1);
    transform-origin: center center -400px;
  }

  .advantage-card.active {
    @apply shadow-xl;
    transform: translateZ(100px);
  }

  .advantage-card:not(.active) {
    @apply opacity-40;
    transform: rotateY(-45deg) translateZ(0);
  }

  .navigation-dots {
    @apply flex justify-center gap-2 mt-8;
  }

  .dot {
    @apply w-2 h-2 rounded-full bg-indigo-200 transition-all duration-300 cursor-pointer;
  }

  .dot.active {
    @apply w-8 bg-indigo-600;
  }

  .nav-button {
    @apply absolute top-1/2 -translate-y-1/2 bg-white rounded-full p-4 shadow-lg 
           text-indigo-600 transition-all duration-300 hover:scale-110 z-10
           opacity-75 hover:opacity-100;
  }

  .nav-button.prev {
    @apply left-4;
  }

  .nav-button.next {
    @apply right-4;
  }

  .metrics-list {
    @apply space-y-4 mt-8;
  }

  .metric-item {
    @apply flex items-center gap-3 p-4 rounded-xl bg-indigo-50 bg-opacity-50
           transition-all duration-300 hover:bg-opacity-75;
  }

  .progress-bar {
    @apply fixed bottom-0 left-0 h-1 bg-indigo-600 transition-all duration-300;
  }
</style>

<div class="bg-gradient-to-b from-white to-slate-50 py-24" id="why-choose-us">
  <div class="max-w-7xl mx-auto px-6">
    <div class="text-center mb-20">
      <h2 class="section-heading text-4xl sm:text-5xl font-bold mb-6 bg-gradient-to-r from-indigo-600 to-indigo-400 bg-clip-text text-transparent">
        Почему разработчики выбирают нашу программу
      </h2>
      <p class="text-slate-600 text-xl max-w-3xl mx-auto">
        Мы создали программу, которая сочетает лучшее из двух миров: 
        структурированное обучение курсов и персональную поддержку менторства
      </p>
    </div>

    <div class="carousel-container">
      <button class="nav-button prev">
        <Icon name="ri:arrow-left-s-line" class="w-6 h-6" />
      </button>
      
      <button class="nav-button next">
        <Icon name="ri:arrow-right-s-line" class="w-6 h-6" />
      </button>

      <div class="carousel-track">
        {advantages.map((advantage, index) => (
          <div class={`advantage-card p-8 ${index === 0 ? 'active' : ''}`}>
            <div class="flex flex-col md:flex-row gap-8 h-full items-center">
              <div class="flex-1 min-w-0">
                <div class="flex items-center gap-4 mb-6">
                  <div class="bg-indigo-100 w-16 h-16 rounded-xl flex items-center justify-center flex-shrink-0">
                    <Icon name={advantage.icon} class="w-8 h-8 text-indigo-600" />
                  </div>
                  <h3 class="text-3xl font-bold text-slate-900">{advantage.title}</h3>
                </div>

                <p class="text-lg text-slate-600 mb-8 leading-relaxed">
                  {advantage.description}
                </p>

                <div class="metrics-list">
                  {advantage.metrics.map(metric => (
                    <div class="metric-item">
                      <Icon name="ri:checkbox-circle-fill" class="w-6 h-6 text-green-500 flex-shrink-0" />
                      <span class="text-lg font-medium text-slate-800">{metric}</span>
                    </div>
                  ))}
                </div>
              </div>

              <div class="flex-1 min-w-0">
                <div class="illustration-container">
                  <img 
                    src={advantage.image} 
                    alt={advantage.title}
                    class="w-full h-auto"
                  />
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      <div class="navigation-dots">
        {advantages.map((_, index) => (
          <button class={`dot ${index === 0 ? 'active' : ''}`} data-index={index}></button>
        ))}
      </div>

      <div class="progress-bar" style="width: 25%"></div>
    </div>
  </div>
</div>

<script>
  const track = document.querySelector('.carousel-track');
  const cards = document.querySelectorAll('.advantage-card');
  const dots = document.querySelectorAll('.dot');
  const prevButton = document.querySelector('.nav-button.prev');
  const nextButton = document.querySelector('.nav-button.next');
  const progressBar = document.querySelector('.progress-bar');
  
  let currentIndex = 0;
  const totalSlides = cards.length;

  function updateSlide(index) {
    currentIndex = index;
    
    // Update cards
    cards.forEach((card, i) => {
      card.classList.toggle('active', i === currentIndex);
      card.style.transform = `rotateY(${(i - currentIndex) * -45}deg) translateZ(${i === currentIndex ? '100px' : '0'})`;
    });

    // Update track position
    track.style.transform = `translateX(${-currentIndex * 100}%)`;
    
    // Update dots
    dots.forEach((dot, i) => {
      dot.classList.toggle('active', i === currentIndex);
    });

    // Update progress bar
    progressBar.style.width = `${((currentIndex + 1) / totalSlides) * 100}%`;

    // Update buttons
    prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';
    nextButton.style.opacity = currentIndex === totalSlides - 1 ? '0.5' : '1';
  }

  // Event listeners
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => updateSlide(index));
  });

  prevButton.addEventListener('click', () => {
    if (currentIndex > 0) updateSlide(currentIndex - 1);
  });

  nextButton.addEventListener('click', () => {
    if (currentIndex < totalSlides - 1) updateSlide(currentIndex + 1);
  });

  // Touch/swipe support
  let touchStartX = 0;
  let touchEndX = 0;

  track.addEventListener('touchstart', e => {
    touchStartX = e.changedTouches[0].screenX;
  });

  track.addEventListener('touchend', e => {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  });

  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;

    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0 && currentIndex < totalSlides - 1) {
        updateSlide(currentIndex + 1);
      } else if (diff < 0 && currentIndex > 0) {
        updateSlide(currentIndex - 1);
      }
    }
  }

  // Auto-advance (optional)
  let autoAdvanceInterval;

  function startAutoAdvance() {
    autoAdvanceInterval = setInterval(() => {
      if (currentIndex < totalSlides - 1) {
        updateSlide(currentIndex + 1);
      } else {
        updateSlide(0);
      }
    }, 5000);
  }

  function stopAutoAdvance() {
    clearInterval(autoAdvanceInterval);
  }

  // Start auto-advance and handle hover
  startAutoAdvance();
  track.addEventListener('mouseenter', stopAutoAdvance);
  track.addEventListener('mouseleave', startAutoAdvance);
</script>
